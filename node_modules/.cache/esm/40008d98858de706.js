let Configuration,Day,Genre,Movie_Genre,Popular,TVPopular,Trending,CustomErrorHandler;_858‍.x([["default",()=>_858‍.o]]);_858‍.w("../Models",[["Configuration",["Configuration"],function(v){Configuration=v}],["Day",["Day"],function(v){Day=v}],["Genre",["Genre"],function(v){Genre=v}],["Movie_Genre",["Movie_Genre"],function(v){Movie_Genre=v}],["Popular",["Popular"],function(v){Popular=v}],["TVPopular",["TVPopular"],function(v){TVPopular=v}],["Trending",["Trending"],function(v){Trending=v}]]);_858‍.w("../service/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);


const welcomeController = {
  //movie/popular
  async Popular(req, res, next) {
    let documents;
    // pagination mongoose-pagination
    try {
      documents = await Popular.find()
        .select("-updatedAt -__v -createdAt")
        .sort({ id: -1 });
    } catch (err) {
      return next(CustomErrorHandler.serverError());
    }
    return res.json(documents);
  },
    //tv/popular
    async TVPopular(req, res, next) {
        let documents;
        // pagination mongoose-pagination
        try {
          documents = await TVPopular.find();
        } catch (err) {
          return next(CustomErrorHandler.serverError());
        }
        return res.json(documents);
      },

  //day
  async Day(req, res, next) {
    let documents;
    // pagination mongoose-pagination
    try {
      documents = await Day.find()
        .select("-updatedAt -__v -createdAt")
        .sort({ id: -1 });
    } catch (err) {
      return next(CustomErrorHandler.serverError());
    }
    return res.json(documents);
  },

  //Configuration
  async Configuration(req, res, next) {
    let documents;
    // pagination mongoose-pagination
    try {
      documents = await Configuration.find();
    } catch (err) {
      return next(CustomErrorHandler.serverError());
    }
    return res.json(documents);
  },

  //genre/tv/list/one
  async Genre(req, res, next) {
    let documents;
    // pagination mongoose-pagination
    try {
      documents = await Genre.find();
    } catch (err) {
      return next(CustomErrorHandler.serverError());
    }
    return res.json(documents);
  },
  //genre/movie/list
  async Movie_Genre(req, res, next) {
    let documents;
    // pagination mongoose-pagination
    try {
      documents = await Movie_Genre.find();
    } catch (err) {
      return next(CustomErrorHandler.serverError());
    }
    return res.json(documents);
  },
    //Trending
    async Trending(req, res, next) {
        let documents;
        // pagination mongoose-pagination
        try {
          documents = await Trending.find();
        } catch (err) {
          return next(CustomErrorHandler.serverError());
        }
        return res.json(documents);
      },
};

_858‍.d(welcomeController);
